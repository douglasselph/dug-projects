{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\fmodern\fprq1\fcharset0 Courier New;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fnil\fprq0\fcharset2 Symbol;}{\f4\fnil\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f5\froman\fprq2\fcharset128 Times New Roman;}{\f6\fmodern\fprq1\fcharset0 Courier New;}{\f7\fnil\fprq2\fcharset0 SimSun;}{\f8\fnil\fprq2\fcharset0 Tahoma;}{\f9\fnil\fprq0\fcharset0 Tahoma;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Normal;}
{\s2\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af8\afs28\lang1033\ltrch\dbch\af7\langfe1033\hich\f2\fs28\lang1033\loch\f2\fs28\lang1033\sbasedon1\snext3 Heading;}
{\s3\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext3 Body Text;}
{\s4\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af9\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon3\snext4 List;}
{\s5\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af9\afs24\lang1033\ai\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\i\loch\f1\fs24\lang1033\i\sbasedon1\snext5 caption;}
{\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af9\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext6 Index;}
{\s7\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af8\afs32\lang1033\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs32\lang1033\b\loch\f2\fs32\lang1033\b\sbasedon2\snext3{\*\soutlvl0} heading 1;}
{\s8\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af8\afs28\lang1033\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs28\lang1033\b\loch\f2\fs28\lang1033\b\sbasedon2\snext3{\*\soutlvl2} heading 3;}
{\s9\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af8\afs28\lang1033\ai\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs28\lang1033\i\b\loch\f2\fs28\lang1033\i\b\sbasedon2\snext3{\*\soutlvl1} heading 2;}
{\*\cs11\cf0\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f3\fs24\lang1033\loch\f3\fs24\lang1033 RTF_Num 2 1;}
{\*\cs12\cf0\rtlch\af4\afs24\lang1033\ltrch\dbch\af4\langfe1033\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 Bullet Symbols;}
{\*\cs13\cf0\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 Numbering Symbols;}
}
{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern3200}}\deftab720
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\pgdscnxt0 Standard;}}
{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb1440\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s2\cf0\qc{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\rtlch\af8\afs28\lang1033\ltrch\dbch\af7\langfe1033\hich\f2\fs28\lang1033\loch\f2\fs28\lang1033 {\rtlch \ltrch\loch\f2\fs28\lang1033\i0\b0 blend_opengl.py}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033
\par \pard\plain \li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\f2\fs32\b\f7\fs32\b\f8\fs32\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\rtlch\af8\afs32\lang1033\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs32\lang1033\b\loch\f2\fs32\lang1033\b{\rtlch \ltrch\loch\f2\fs32\lang1033\i0\b\rtlch\ltrch\dbch\hich\fs22\loch\fs22 FLOW}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 write_obj()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab build_tree()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab get_topname() \u8211\'3f determined by the object with the most children.}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab write_mesh()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab \tab write_vertexes()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab \tab write_normals()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab \tab write_indexes()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab \tab write_colors()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab \tab write_textures()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab \tab write_armature()}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\f5\fs22\loch\f5\fs22 \tab \tab }
\par \pard\plain \li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\f2\fs32\b\f7\fs32\b\f8\fs32\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\rtlch\af8\afs32\lang1033\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs32\lang1033\b\loch\f2\fs32\lang1033\b{\rtlch \ltrch\loch\f2\fs32\lang1033\i0\b\rtlch\ltrch\dbch\hich\fs22\loch\fs22 VERTEX/NORMALS}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\fs22\loch\fs22 The blender model is exported to vertexes and normals.}
\par \pard\plain \li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\f2\fs32\b\f7\fs32\b\f8\fs32\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\rtlch\af8\afs32\lang1033\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs32\lang1033\b\loch\f2\fs32\lang1033\b{\rtlch \ltrch\loch\f2\fs32\lang1033\i0\b\rtlch\ltrch\dbch\hich\fs22\loch\fs22 COLOR}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033
\par \pard\plain \li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\f2\fs32\b\f7\fs32\b\f8\fs32\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\rtlch\af8\afs32\lang1033\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs32\lang1033\b\loch\f2\fs32\lang1033\b{\rtlch \ltrch\loch\f2\fs32\lang1033\i0\b\rtlch\ltrch\dbch\hich\fs22\loch\fs22 TEXTURE}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\fs22\loch\fs22 A single opengl object may only have one texture image.}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\fs22\loch\fs22 A single vertex however may represent many different points on a single texture. For example, it could represent the upper-right corner of one part of the image while at the same time represent the upper-left of another part. Therefore, the write_texture()
 function detects if a single vertex is shared in this way, and creates a new vertex for each individual point on the texture. In OpenGL, because the texture/vertex arrays run parallel the vertex array value needs to be duplicated.}
\par \pard\plain \li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\f2\fs32\b\f7\fs32\b\f8\fs32\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\rtlch\af8\afs32\lang1033\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs32\lang1033\b\loch\f2\fs32\lang1033\b{\rtlch \ltrch\loch\f2\fs32\lang1033\i0\b\rtlch\ltrch\dbch\hich\fs22\loch\fs22 ARMATURE}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\fs22\loch\fs22 The name of the armature must be 'Arm_<objname>' where <objname> is the name of the object the armature is controlling.}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\fs22\loch\fs22 The armature's bones must have names which match the vertex groups in which the bone is to control. That is, to set up an armature, you create a number of bones. Then, you name these bones. And then, you set up vertex groups with the same name as the bones
 to indicate which vertexes the bones are to control.}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\fs22\loch\fs22 If a vertex is shared between two or more vertex groups, and thus bones, these particular vertexes are treated as 'joints'. In this way a single vertex may be part of a bone group, but also be part of a joint group. This will affect how the shape is animat
ed.}
\par \pard\plain \li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\f2\fs32\b\f7\fs32\b\f8\fs32\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-432\sb240\sa120\keepn\rtlch\af8\afs32\lang1033\ab\ltrch\dbch\af7\langfe1033\hich\f2\fs32\lang1033\b\loch\f2\fs32\lang1033\b{\rtlch \ltrch\loch\f2\fs32\lang1033\i0\b\rtlch\ltrch\dbch\hich\fs22\loch\fs22 ANIMATION}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0\rtlch\ltrch\dbch\hich\fs22\loch\fs22 Animation in blender are determined using Actions, or 'ipo''s. An action has channel names which lead to 'ipo' representation. An ipo describes a series of bezierPoints. However, from this bezier points blender only gives you the start and end of the bezie
r curves. The middle or knot points needs to be computed. This computation is left to the consumer of the opengl blender output. export_opengl script only writes out the start and end knot points of the bezier or interpolated curve. The x axis is treated a
s time in seconds. The y value is used depending on the context that is being written (rot_x, rot_y, rot_z, loc_x, etc).}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033
\par }